name: Build and deploy app-yeahyeahyeah

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']
  workflow_dispatch:

jobs:
  build-and-deploy:
    name: Build and deploy app-yeahyeahyeah
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        run: docker build . --file Dockerfile --tag app-yeahyeahyeah --label "runnumber=${GITHUB_RUN_ID}" --build-arg NPM_TOKEN=${{ secrets.NPM_TOKEN }}
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/app-yeahyeahyeah
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag app-yeahyeahyeah $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
      - name: Deploy Container to Digitalocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            IMAGE_ID=ghcr.io/${{ github.repository_owner }}/app-yeahyeahyeah
            # Change all uppercase to lowercase
            IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
            # Strip git ref prefix from version
            VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
            # Strip "v" prefix from tag name
            [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
            # Use Docker `latest` tag convention
            [ "$VERSION" == "main" ] && VERSION=latest
            echo IMAGE_ID=$IMAGE_ID
            echo VERSION=$VERSION
            docker pull $IMAGE_ID:$VERSION
            docker update --restart=no app-yeahyeahyeah || true
            docker stop $(docker ps -a -q) || true
            docker rm $(docker ps -a -q) || true
            docker run --env NEXT_PUBLIC_QWACKER_API_URL=${{ secrets.NEXT_PUBLIC_QWACKER_API_URL }} --env NEXTAUTH_URL=${{ secrets.NEXTAUTH_URL }} --env NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }} --env ZITADEL_ISSUER=${{ secrets.ZITADEL_ISSUER }} --env ZITADEL_CLIENT_ID=${{ secrets.ZITADEL_CLIENT_ID }} -d --restart unless-stopped -p 3000:3000 --name app-yeahyeahyeah $IMAGE_ID:$VERSION
