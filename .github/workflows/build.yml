name: build
on:
  push:
    branches:
      - main
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            registry-url: https://npm.pkg.github.com/
            scope: '@smartive-education'
        - name: Install dependencies
          run: npm ci
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        - name: Run Build
          run: npm run build --if-present
  test:
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest]
        node-version: [16.x]
      steps:
        - uses: actions/checkout@v3
        - name: Use Node.js ${{ matrix.node-version }}
          uses: actions/setup-node@v3
          with:
            node-version: ${{ matrix.node-version }}
            registry-url: https://npm.pkg.github.com/
            scope: '@smartive-education'
        - name: Install dependencies
          run: npm ci
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        - name: Run Tests
          run: npm run test
  build-and-deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v3
      - name: Build image
        run: docker build . --file Dockerfile --tag app-yeahyeahyeah --label "runnumber=${GITHUB_RUN_ID}"
      - name: Log into registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/app-yeahyeahyeah
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag nextjs-blog $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
