name: Release Mumble App

on:
  workflow_call:
    secrets:
      NPM_TOKEN:
        required: true
      HOST:
        required: true
      USERNAME:
        required: true
      PASSWORD:
        required: true
      ZITADEL_ISSUER:
        required: true
      ZITADEL_CLIENT_ID:
        required: true
    outputs:
      new_release_published:
        description: 'New release published'
        value: ${{ jobs.release.outputs.new_release_published }}

concurrency:
  group: 'release'
  cancel-in-progress: true

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all

    outputs:
      new_release_published: ${{ steps.semantic.outputs.new_release_published }}
      new_release_version: ${{ steps.semantic.outputs.new_release_version }}

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/655814648425/locations/global/workloadIdentityPools/casfea22-pool/providers/casfea22-provider'
          service_account: 'casfea22-service-account@casfea22.iam.gserviceaccount.com'
          token_format: 'access_token'

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Google Artifact Registry
        uses: docker/login-action@v2
        with:
          registry: europe-west6-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - name: Semantic Release
        id: semantic
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 19
          extra_plugins: |
            @codedependant/semantic-release-docker
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  deploy:
    name: Deploy app-yeahyeahyeah with Terraform to Google Cloud
    runs-on: ubuntu-latest
    permissions: write-all
    needs:
      - release
    if: needs.release.outputs.new_release_published == 'true'

    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v1'
        with:
          workload_identity_provider: 'projects/655814648425/locations/global/workloadIdentityPools/casfea22-pool/providers/casfea22-provider'
          service_account: 'casfea22-service-account@casfea22.iam.gserviceaccount.com'
          token_format: 'access_token'

      - uses: hashicorp/setup-terraform@v2

      - run: terraform init
        working-directory: terraform

      - run: terraform apply -auto-approve
        working-directory: terraform
        env:
          TF_VAR_release_version: ${{ needs.release.outputs.new_release_version }}
          TF_VAR_zitadel_issuer: ${{ secrets.ZITADEL_ISSUER }}
          TF_VAR_zitadel_client_id: ${{ secrets.ZITADEL_CLIENT_ID }}

  build-and-deploy-to-digital-ocean:
    name: Deploy app-yeahyeahyeah to Digital Ocean
    runs-on: ubuntu-latest
    needs:
      - release
    if: needs.release.outputs.new_release_published == 'true'

    steps:
      - name: Deploy container to digital ocean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
          script: |
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            cd /usr/src/app
            docker-compose pull
            docker-compose up -d --no-deps --build --force-recreate app-yeahyeahyeah
